{
  "version": "1.0.0",
  "timestamp": "2025-01-29T18:40:00.000Z",
  "project": "devnet.clean_architecture",
  "testCoverage": {
    "totalTestFiles": 8,
    "testTypes": {
      "unit": 7,
      "integration": 0,
      "e2e": 1
    },
    "areas": {
      "database": 7,
      "frontend": 1,
      "api": 0,
      "auth": 0
    }
  },
  "userJourneys": [
    {
      "name": "Home Page Access",
      "description": "User accesses the home page",
      "steps": [
        "Navigate to /",
        "If marketing enabled: See 'Your revolutionary Next.js SaaS' heading",
        "If marketing disabled: Redirect to /auth/login"
      ],
      "criticalPath": true,
      "testFile": "apps/web/tests/home.spec.ts",
      "businessRules": [
        "Home page behavior depends on config.ui.marketing.enabled flag",
        "When marketing disabled, users are redirected to login"
      ],
      "performanceBaseline": {
        "notes": "Not captured in tests"
      }
    }
  ],
  "dataOperations": [
    {
      "entity": "User",
      "operations": [
        {
          "name": "Create and Retrieve Users",
          "description": "Basic CRUD operations for user management",
          "requiredFields": [
            "id",
            "email", 
            "name",
            "role",
            "emailVerified",
            "onboardingComplete",
            "createdAt",
            "updatedAt"
          ],
          "testScenarios": [
            "Create user with valid data",
            "Retrieve user by ID",
            "Retrieve user by email",
            "Filter users by name pattern",
            "Count total users",
            "Handle non-existent user lookup"
          ]
        },
        {
          "name": "User Account Linking",
          "description": "Link authentication accounts to users",
          "relations": ["User -> Account (one-to-many)"],
          "testScenarios": [
            "Create account linked to user",
            "Verify account-user relationship"
          ]
        }
      ],
      "businessInvariants": [
        "User ID must be unique (nanoid)",
        "Email must be unique",
        "Role can be 'user' or 'admin'", 
        "emailVerified is boolean",
        "onboardingComplete tracks setup status"
      ]
    },
    {
      "entity": "Organization",
      "operations": [
        {
          "name": "Basic Organization Queries",
          "description": "Foundation for multi-tenant organization features",
          "testScenarios": [
            "Handle empty organization list",
            "Count organizations",
            "Lookup organization by ID",
            "Lookup organization by slug",
            "Query memberships",
            "Query invitations"
          ]
        }
      ],
      "businessInvariants": [
        "Organization slug must be unique",
        "Organizations can have members",
        "Organizations can have pending invitations with status 'pending'"
      ]
    }
  ],
  "apiContracts": [
    {
      "note": "No API tests found - API contracts need to be extracted from route handlers"
    }
  ],
  "authenticationFlow": [
    {
      "note": "Authentication tests not found - need to extract from auth implementation"
    }
  ],
  "businessRules": [
    {
      "domain": "User Management",
      "rules": [
        "Users have roles: 'user' or 'admin'",
        "Email verification status tracked",
        "Onboarding completion tracked",
        "Users can have multiple authentication accounts"
      ]
    },
    {
      "domain": "Organizations", 
      "rules": [
        "Organizations identified by unique slug",
        "Member relationships tracked",
        "Invitation system with status tracking"
      ]
    },
    {
      "domain": "Configuration",
      "rules": [
        "Marketing UI can be enabled/disabled via config.ui.marketing.enabled",
        "When marketing disabled, root redirects to login"
      ]
    }
  ],
  "performanceBaselines": {
    "note": "No performance tests found - baselines need to be captured from running system"
  },
  "gaps": [
    "No API endpoint tests",
    "No authentication flow tests", 
    "No integration tests",
    "No performance benchmarks",
    "Limited E2E test coverage",
    "No business workflow tests"
  ],
  "nextSteps": [
    "Extract API contracts from route handlers",
    "Identify authentication flows",
    "Capture runtime performance baselines",
    "Map complete user journeys beyond home page"
  ]
}